#include  "./params.fc";

cell pack_swap_wallet_data(
    slice owner_address,
    int noReferredUsers,
    int initialized,
    cell referrer_data, 
    slice root_addr, 
    cell swap_wallet_code
) inline {
   return begin_cell()
            .store_slice(owner_address)
            .store_uint(noReferredUsers, 32)
            .store_int(initialized, 4)
            .store_ref(referrer_data)
            .store_slice(root_addr)
            .store_ref(swap_wallet_code)
        .end_cell();
    
}

cell calculate_swap_wallet_state_init(
  slice owner_address, 
  slice root_addr, 
  cell swap_wallet_code
) inline {
  return begin_cell()
            .store_uint(0, 2)
            .store_dict(swap_wallet_code)
            .store_dict(pack_swap_wallet_data(
              owner_address,
              0,
              0,
              begin_cell().end_cell(),
              root_addr,
              swap_wallet_code
            ))
            .store_uint(0, 1)
            .end_cell();
}

slice calculate_swap_wallet_address(cell state_init) inline {
  return begin_cell().store_uint(4, 3)
            .store_int(workchain(), 8)
            .store_uint(cell_hash(state_init), 256)
            .end_cell()
            .begin_parse();
}

slice calculate_user_swap_wallet_address(
  slice owner_address, 
  slice root_addr, 
  cell swap_wallet_code
) inline {
  return calculate_swap_wallet_address(calculate_swap_wallet_state_init(
    owner_address, 
    root_addr, 
    swap_wallet_code
  ));
}
